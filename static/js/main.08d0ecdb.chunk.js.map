{"version":3,"sources":["components/Content.js","components/Carousel.js","components/SearchBar.js","components/Countdown.js","App.js","index.js"],"names":["cityList","Content","_ref","searchKeyWord","_useState","useState","_useState2","Object","slicedToArray","cityName","setCityName","_useState3","_useState4","top","setTop","_useState5","_useState6","skip","setSkip","_useState7","_useState8","fetchScenicSpot","setFetchScenicSpot","_useState9","_useState10","pageNumber","setPageNumber","_useState11","_useState12","popUpWindow","setPopUpWindow","observer","useRef","lastSpotElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","console","log","prevNumber","observe","useEffect","getData","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","fetch","concat","then","res","json","data","preSpot","toConsumableArray","catch","err","stop","apply","this","arguments","length","cityTabs","map","v","i","react_default","createElement","className","onClick","key","scenesList","filter","value","Name","match","ref","result","City","Phone","DescriptionDetail","popUp","Carousel","page","setPage","carouselNum","carouselImg","src","carouselDot","style","backgroundColor","temp","id","setInterval","clearInterval","SearchBar","setSearchKeyWord","timer","setTimer","scroll","setScroll","window","onscroll","pageYOffset","scrollFunction","type","onChange","e","target","clearTimeout","setTimeout","Countdown","seconds","setSeconds","minutes","setMinutes","hours","setHours","c","hour","min","second","App","components_SearchBar","components_Carousel","components_Countdown","components_Content","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.08d0ecdb.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef,useCallback} from 'react'\nimport '../public/css/content.css'\nimport {getScenicSpot} from '../moudles/request';\nconst cityList = [\n    'Taipei','NewTaipei','Taoyuan','Taichung','Tainan','Kaohsiung','Keelung','Hsinchu','HsinchuCounty','MiaoliCounty','ChanghuaCounty','NantouCounty','YunlinCounty','ChiayiCounty','Chiayi','PingtungCounty','YilanCounty','HualienCounty','TaitungCounty','KinmenCounty','PenghuCounty','LienchiangCounty'\n]\n\nconst Content = ({searchKeyWord}) => {\n    const [cityName, setCityName] = useState('Taipei');\n    const [top, setTop] = useState(5);\n    const [skip, setSkip] = useState(0);\n    const [fetchScenicSpot, setFetchScenicSpot] = useState([]);\n    const [pageNumber, setPageNumber] = useState(0);\n    const [popUpWindow, setPopUpWindow] = useState('')\n    const observer = useRef();\n\n    const lastSpotElementRef = useCallback(node => {\n        if(observer.current) observer.current.disconnect();\n        observer.current = new IntersectionObserver(entries => {\n            if(entries[0].isIntersecting){\n                console.log('Visable'); \n                setPageNumber(prevNumber => prevNumber + 1);\n            }\n        })\n        if(node) observer.current.observe(node);\n    }\n    ,[]);\n\n    useEffect(() => {\n        const getData = async () => {\n            // console.log(`top:${top}`);\n            // console.log(`skip:${skip}`);\n            // console.log(`https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot/${cityName}?%24top=${top}&%24skip=${skip}&%24format=JSON`);\n            const data = fetch(`https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot/${cityName}?%24top=${top}&%24skip=${skip}&%24format=JSON`)\n            .then((res) => {\n                return res.json();\n            })\n            .then((data) => {\n                setFetchScenicSpot(preSpot => [...preSpot,...data]);\n                setSkip(skip => skip + 5);\n            })\n            .catch((err) => {\n                console.log(`Error fetching data:${err}`);\n            })\n            \n        }\n        if(fetchScenicSpot.length < 40)getData();\n    }, [cityName,pageNumber])\n\n    const popUp = (i) => {\n    const result =  <div className='popUp-container' >\n            <div className='popUp-close' onClick={()=>setPopUpWindow('')}></div>\n            <div className='popUp-display'>\n                <div className='popUp-item'>{fetchScenicSpot[i].City}</div>\n                <div className='popUp-item'>{fetchScenicSpot[i].Name}</div>\n                <div className='popUp-item'>{fetchScenicSpot[i].Phone}</div>\n                <div className='popUp-item'>{fetchScenicSpot[i].DescriptionDetail}</div>\n                <div className='popUp-item'>{}</div>\n            </div>\n        </div>\n        setPopUpWindow(result)\n    }\n    const cityTabs = cityList.map((v,i) => {\n        return(\n            <div \n                className='content-tabs-item' \n                onClick={()=>{\n                    setCityName(v)\n                    setFetchScenicSpot([])\n                    setTop(5)\n                    setSkip(0)\n                }}\n                key={i}\n                >{v}</div>\n        )\n    })\n    const scenesList = fetchScenicSpot.filter((value)=>{\n        if(searchKeyWord == ''){return value}\n        else{return value.Name.match(searchKeyWord)}\n    }).map((v,i)=>{\n        return(\n            <div className='content-scenesList-item' ref={fetchScenicSpot.length === i + 1 ? lastSpotElementRef : null} key={i} onClick={()=>popUp(i)}>\n                {v.City}<br/>\n                {v.Name}<br/>\n                {v.Phone}\n            </div>\n        )\n    })\n    return (\n        <div className='content-container'>\n            {popUpWindow}\n            <div className='content-tabs'>\n                {cityTabs}\n            </div>\n            <div className='content-scenesList'>\n                {scenesList}\n            </div>\n        </div>\n    )\n}\n\nexport default Content\n","import React,{useState,useEffect} from 'react'\nimport '../public/css/carousel.css'\n\nconst Carousel = () => {\n    const [page, setPage] = useState(0)\n    const carouselNum = ['01','02','03','04','05','06','07','08','09','10']\n    const carouselImg = carouselNum.map((v,i) => {\n        return (<img \n                    className={i === page ? 'carousel-content-img' : 'carousel-content-img none'}\n                    src={`https://fakeimg.pl/1300x300/?text=Carousel${v}`} \n                    key={i}\n                ></img>)\n    })\n    const carouselDot = carouselNum.map((v,i) => {\n        return (<div \n                    className='carousel-dot'\n                    style={i === page ? {backgroundColor:'black'} : null}\n                    key={i}\n                    onClick={()=>{setPage(i)}}\n                ></div>)\n    })\n    useEffect(() => {\n        let temp = page\n        if(page < 0){\n            temp = 9\n        }else if(page > 9){\n            temp = 0\n        }\n        setPage(temp)\n    }, [page])\n    useEffect(() => {\n        const id = setInterval(() => setPage((v) => v + 1), 1000);\n        return () => {\n            clearInterval(id)\n        }\n    }, [page])\n    return (\n        <div className='carousel-container'>\n            <div className='carousel-content'>\n                {carouselImg}\n            </div>\n            <div className='carousel-dot-group'>\n                {carouselDot}\n            </div>\n            <div className='carousel-arrow-left' onClick={()=>{setPage(page => page - 1)}}></div>\n            <div className='carousel-arrow-right' onClick={()=>{setPage(page => page + 1)}}></div>\n        </div>\n    )\n}\n\nexport default Carousel\n","import React, { useState,useRef,useCallback } from 'react'\nimport '../public/css/searchBar.css'\n\nconst SearchBar = ({setSearchKeyWord}) => {\n    const [timer, setTimer] = useState(null)\n    const [scroll, setScroll] = useState(false)\n    const observer = useRef();\n\n    const lastSpotElementRef = useCallback(node => {\n        if(observer.current) observer.current.disconnect();\n        if(node) observer.current.observe(node)\n    }\n    ,[]);\n    const handleChange = (value) => {\n        if(timer){\n            clearTimeout(timer);\n            setTimer(null);\n        }\n        setTimer(\n            setTimeout(() => {\n                console.log(value);\n                setSearchKeyWord(value)\n            }, 500)\n        );\n    }\n    const scrollFunction = () => {\n        let temp = false\n        if (window.pageYOffset >= 20) {\n            console.log('Y');\n            temp = true\n        }\n        setScroll(temp)\n    }\n    window.onscroll = () => {scrollFunction()};\n    return (\n        <div className={ scroll ? 'searchbar-container ': 'searchbar-container'}>\n            <input type=\"text\" onChange={(e) => { handleChange(e.target.value)}} className={ scroll ? 'searchbar-container-sticky': null}/>\n        </div>\n    )\n    //className={ scroll ? 'searchbar-container-sticky searchbar-container  ': 'searchbar-container'}\n}\n\nexport default SearchBar\n","import React,{useState,useEffect} from 'react'\nimport '../public/css/countdown.css'\n\nconst Countdown = () => {\n    const [seconds, setSeconds] = useState(59)\n    const [minutes, setMinutes] = useState(59)\n    const [hours, setHours] = useState(23)\n    useEffect(() => {\n        const id = setInterval(() => setSeconds((c) => c - 1), 1000);\n        let hour = 0;\n        let min = 0;\n        let second = 0;\n        if(seconds < 0){\n            min = -1\n            second = 60\n        }\n        if(minutes < 0){\n            hour = -1\n            min = 60\n        }\n        setSeconds(value => value + second)\n        setMinutes(value => value + min)\n        setHours(value => value + hour)\n        return () => {\n            clearInterval(id)\n        }\n    }, [seconds])\n    return (\n        <div className='countdown-container'>\n            倒數{hours}:{minutes}:{seconds}\n        </div>\n    )\n}\n\nexport default Countdown\n","import './App.css';\nimport React,{useState} from 'react'\nimport Content from './components/Content';\nimport Carousel from './components/Carousel';\nimport SearchBar from './components/SearchBar';\nimport Countdown from './components/Countdown';\n\nconst App = () => {\n  const [searchKeyWord, setSearchKeyWord] = useState('')\n  return (\n    <div className='container'>\n      <SearchBar setSearchKeyWord={setSearchKeyWord}/>\n      <Carousel />\n      <Countdown />\n      <Content searchKeyWord={searchKeyWord}/>\n      <div className='backtop' onClick={()=>{window.scroll(0, 0)}}></div>\n    </div>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}